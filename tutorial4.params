# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = koza.params

# gotta go fast
evalthreads = 1
seed.0 = time
seed.1 = time
seed.2 = time
seed.3 = time
seed.4 = time
seed.5 = time
seed.6 = time
seed.7 = time

# the next four items are already defined in koza.params, but we
# put them here to be clear.

# We have one function set, of class GPFunctionSet
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
# We'll call the function set "f0".
gp.fs.0.name = f0

gp.fs.0.size = 13
# TODO replace with state variables: position, rotation, cart velocity, pole angular velocity
gp.fs.0.func.0 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.X
gp.fs.0.func.0.nc = nc0
gp.fs.0.func.1 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Y
gp.fs.0.func.1.nc = nc0
gp.fs.0.func.2 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Add
gp.fs.0.func.2.nc = nc2
gp.fs.0.func.3 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Sub
gp.fs.0.func.3.nc = nc2
gp.fs.0.func.4 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Mul
gp.fs.0.func.4.nc = nc2
gp.fs.0.func.5 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Div
gp.fs.0.func.5.nc = nc2
gp.fs.0.func.6 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Cos
gp.fs.0.func.6.nc = nc1
gp.fs.0.func.7 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.Sin
gp.fs.0.func.7.nc = nc1
gp.fs.0.func.8 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.GravitationalConstant
gp.fs.0.func.8.nc = nc0
gp.fs.0.func.9 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.PoleLength
gp.fs.0.func.9.nc = nc0
gp.fs.0.func.10 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.PoleMass
gp.fs.0.func.10.nc = nc0
gp.fs.0.func.11 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.ConstantOne
gp.fs.0.func.11.nc = nc0
gp.fs.0.func.12 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.ConstantNegativeOne
gp.fs.0.func.12.nc = nc0

# not sure if these help at all, omitting for now

gp.fs.0.func.13 = org.wkh.swarmscale.physics.invertedpendulum.gp.function.constant.ConstantFour
gp.fs.0.func.13.nc = nc0

eval.problem = org.wkh.swarmscale.physics.invertedpendulum.gp.problem.MultiValuedRegression
eval.problem.data = org.wkh.swarmscale.physics.invertedpendulum.gp.DoubleData

pop.subpop.0.species.fitness = org.wkh.swarmscale.physics.invertedpendulum.gp.ThresholdKozaFitness
pop.subpop.0.size = 3000
generations = 100